/*
 * spamapi
 * Easily and directly scan and block spam security threats in input.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Result of detecting spam using AI
 */
public class SwagSpamDetectionAdvancedResponse implements Swagger.MappedProperties {
    /**
     * True if the result is not spam (clean), and false otherwise
     * @return cleanResult
     */
    public Boolean cleanResult { get; set; }

    /**
     * True if the input text contains spam, false otherwise
     * @return containsSpam
     */
    public Boolean containsSpam { get; set; }

    /**
     * True if the input text contains unsolicited sales, false otherwise
     * @return containsUnsolicitedSales
     */
    public Boolean containsUnsolicitedSales { get; set; }

    /**
     * True if the input text contains promotional content, false otherwise
     * @return containsPromotionalContent
     */
    public Boolean containsPromotionalContent { get; set; }

    /**
     * True if the input text contains a phishing attempt, false otherwise
     * @return containsPhishingAttempt
     */
    public Boolean containsPhishingAttempt { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'CleanResult' => 'cleanResult',
        'ContainsSpam' => 'containsSpam',
        'ContainsUnsolicitedSales' => 'containsUnsolicitedSales',
        'ContainsPromotionalContent' => 'containsPromotionalContent',
        'ContainsPhishingAttempt' => 'containsPhishingAttempt'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static SwagSpamDetectionAdvancedResponse getExample() {
        SwagSpamDetectionAdvancedResponse spamDetectionAdvancedResponse = new SwagSpamDetectionAdvancedResponse();
        spamDetectionAdvancedResponse.cleanResult = true;
        spamDetectionAdvancedResponse.containsSpam = true;
        spamDetectionAdvancedResponse.containsUnsolicitedSales = true;
        spamDetectionAdvancedResponse.containsPromotionalContent = true;
        spamDetectionAdvancedResponse.containsPhishingAttempt = true;
        return spamDetectionAdvancedResponse;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagSpamDetectionAdvancedResponse) {
            SwagSpamDetectionAdvancedResponse spamDetectionAdvancedResponse = (SwagSpamDetectionAdvancedResponse) obj;
            return this.cleanResult == spamDetectionAdvancedResponse.cleanResult
                && this.containsSpam == spamDetectionAdvancedResponse.containsSpam
                && this.containsUnsolicitedSales == spamDetectionAdvancedResponse.containsUnsolicitedSales
                && this.containsPromotionalContent == spamDetectionAdvancedResponse.containsPromotionalContent
                && this.containsPhishingAttempt == spamDetectionAdvancedResponse.containsPhishingAttempt;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (cleanResult == null ? 0 : System.hashCode(cleanResult));
        hashCode = (17 * hashCode) + (containsSpam == null ? 0 : System.hashCode(containsSpam));
        hashCode = (17 * hashCode) + (containsUnsolicitedSales == null ? 0 : System.hashCode(containsUnsolicitedSales));
        hashCode = (17 * hashCode) + (containsPromotionalContent == null ? 0 : System.hashCode(containsPromotionalContent));
        hashCode = (17 * hashCode) + (containsPhishingAttempt == null ? 0 : System.hashCode(containsPhishingAttempt));
        return hashCode;
    }
}

